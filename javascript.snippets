snippet clb "console log box"
console.log('-----------')
console.log(${VISUAL}${1})$0
console.log('-----------')
endsnippet

snippet cl "console log" b
console.log(${1}${VISUAL})$0
endsnippet

snippet if "if" w
if (${1}) {
	${VISUAL}${2}
}$0
endsnippet

snippet iif "inline if"
if (${1}) ${2}
endsnippet

snippet var "var" i
var ${1} = ${2};$0
endsnippet

snippet for "for loop"
for (let ${1} = 0; $1 <= ${2}; $1++) {
	${VISUAL}${3}
}$0
endsnippet

snippet desc "describe block"
describe('${1}', () => {
	${VISUAL}${2}
})$0
endsnippet

snippet it "it block"
it('${1}', () => {
	${VISUAL}${2}
})$0
endsnippet

snippet before "before block"
before(() => {
	${VISUAL}${1}
})$0
endsnippet

snippet switch "switch case"
switch(${1}) {
	default:
		return ${2}
}
endsnippet

snippet case "case"
case ${1}:
	${0:${VISUAL}}
	break
endsnippet

snippet fun "function"
function $0
endsnippet

snippet af "arrow-function"
(${1}) => $0
endsnippet

snippet	mf "make function"
const ${1} = (${2}) => {
	${VISUAL}$0
}
endsnippet

snippet "<((\w+).*)>" "Generic Tag" r
<`!p snip.rv = match.group(1)`>
	${VISUAL}${1}
</`!p snip.rv = match.group(2)`>
endsnippet

snippet let "let"
let ${1} = ${2};$0
endsnippet

snippet const "const"
const ${1} = $2;$0
endsnippet

snippet try "try"
try {
	${0:${VISUAL}}
} catch (${1}) {
	${2:/* handle error */}
}
endsnippet

snippet catch ""
catch {
	${VISUAL}${2}
}$0
endsnippet

snippet while "(condition) { ... }"
	while (${1}) {
		${0:${VISUAL}}
	}
endsnippet

snippet import "import"
import ${1} from "${2}"$0
endsnippet

snippet imp "import"
import ${1} from "${2}"$0
endsnippet

snippet test "test"
test('${1}', () => {
	${VISUAL}${2}
})
endsnippet

snippet impt "import test"
import React from 'react'
import renderer from 'react-test-renderer'
import { MockedProvider } from '@apollo/react-testing'
endsnippet

snippet ireact "import test"
import React from 'react'
endsnippet
